import asyncio
import aiohttp
import os
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("TG_BOT_TOKEN")
WEATHER_API_KEY = os.getenv("API_WEATHER")

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))

dp = Dispatcher()

# üìå –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —ç–º–æ–¥–∑–∏
def get_main_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.button(text="üëã –°—Ç–∞—Ä—Ç")
    builder.button(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    builder.button(text="üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
    builder.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return builder.as_markup(resize_keyboard=True)

# üü¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ "–°—Ç–∞—Ä—Ç"
@dp.message(F.text == "üëã –°—Ç–∞—Ä—Ç")
async def start_handler(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –ú–æ—Å–∫–≤–µ ‚òÅÔ∏è\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –Ω–∏–∂–µ üëá",
        reply_markup=get_main_keyboard()
    )

# üü° –û–±—Ä–∞–±–æ—Ç–∫–∞ "–ü–æ–º–æ—â—å"
@dp.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def help_handler(message: Message):
    await message.answer(
        "–Ø –º–æ–≥—É:\n"
        "üå¶ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ –ú–æ—Å–∫–≤–µ\n"
        "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è\n"
        "‚ÑπÔ∏è –†–∞—Å—Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!"
    )

# üîµ –û–±—Ä–∞–±–æ—Ç–∫–∞ "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"
@dp.message(F.text == "üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
async def forecast_handler(message: Message):
    url = f"http://api.weatherapi.com/v1/current.json?key={WEATHER_API_KEY}&q=Moscow&lang=ru"

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                weather = data["current"]
                text = (
                    f"üåç –ì–æ—Ä–æ–¥: –ú–æ—Å–∫–≤–∞\n"
                    f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['temp_c']}¬∞C\n"
                    f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {weather['condition']['text']}\n"
                    f"üí® –í–µ—Ç–µ—Ä: {weather['wind_kph']} –∫–º/—á\n"
                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['humidity']}%"
                )
                await message.answer(text)
            else:
                await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# üîπ –ù–∞ —Å–ª—É—á–∞–π –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤—Ä—É—á–Ω—É—é
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await start_handler(message)

@dp.message(Command("help"))
async def cmd_help(message: Message):
    await help_handler(message)

# üöÄ –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
